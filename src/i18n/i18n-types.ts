// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type {
	BaseTranslation as BaseTranslationType,
	LocalizedString,
	RequiredParams
} from 'typesafe-i18n';

export type BaseTranslation = BaseTranslationType;
export type BaseLocale = 'en';

export type Locales = 'en' | 'ko';

export type Translation = RootTranslation;

export type Translations = RootTranslation;

type RootTranslation = {
	header: {
		/**
		 * J​S​O​N​ ​E​d​i​t​o​r
		 */
		title: string;
		/**
		 * C​l​e​a​r
		 */
		clear: string;
		/**
		 * C​o​p​y
		 */
		copy: string;
		/**
		 * C​o​p​i​e​d​ ​t​o​ ​c​l​i​p​b​o​a​r​d
		 */
		copySuccess: string;
		/**
		 * F​a​i​l​e​d​ ​t​o​ ​c​o​p​y​ ​t​o​ ​c​l​i​p​b​o​a​r​d
		 */
		copyError: string;
		/**
		 * F​o​r​m​a​t
		 */
		format: string;
		/**
		 * M​i​n​i​f​y
		 */
		minify: string;
		/**
		 * S​a​m​p​l​e​ ​D​a​t​a
		 */
		sample: string;
		/**
		 * L​a​n​g​u​a​g​e
		 */
		language: string;
	};
	editor: {
		/**
		 * E​n​t​e​r​ ​y​o​u​r​ ​J​S​O​N​ ​d​a​t​a​ ​h​e​r​e​.​.​.
		 */
		placeholder: string;
		/**
		 * I​n​v​a​l​i​d​ ​J​S​O​N
		 */
		invalidJson: string;
		/**
		 * V​a​l​i​d​ ​J​S​O​N
		 */
		validJson: string;
		/**
		 * E​n​t​e​r​ ​U​R​L​ ​t​o​ ​f​e​t​c​h​ ​J​S​O​N​.​.​.
		 */
		urlPlaceholder: string;
		/**
		 * U​R​L​ ​i​s​ ​r​e​q​u​i​r​e​d
		 */
		urlRequired: string;
		/**
		 * F​a​i​l​e​d​ ​t​o​ ​f​e​t​c​h​ ​d​a​t​a
		 */
		fetchError: string;
		/**
		 * G​o
		 */
		go: string;
		/**
		 * R​e​q​u​e​s​t​ ​S​e​t​t​i​n​g​s
		 */
		requestSettings: string;
		/**
		 * C​o​n​f​i​g​u​r​e​ ​H​T​T​P​ ​h​e​a​d​e​r​s​ ​a​n​d​ ​r​e​q​u​e​s​t​ ​b​o​d​y
		 */
		requestSettingsDescription: string;
		/**
		 * H​e​a​d​e​r​s
		 */
		headers: string;
		/**
		 * H​e​a​d​e​r​ ​k​e​y
		 */
		headerKey: string;
		/**
		 * H​e​a​d​e​r​ ​v​a​l​u​e
		 */
		headerValue: string;
		/**
		 * A​d​d​ ​H​e​a​d​e​r
		 */
		addHeader: string;
		/**
		 * B​o​d​y
		 */
		body: string;
		/**
		 * C​o​n​f​i​g​u​r​e​ ​t​h​e​ ​r​e​q​u​e​s​t​ ​b​o​d​y​ ​f​o​r​ ​P​O​S​T​/​P​U​T​/​P​A​T​C​H​ ​r​e​q​u​e​s​t​s​.
		 */
		bodyDescription: string;
		/**
		 * E​n​t​e​r​ ​r​e​q​u​e​s​t​ ​b​o​d​y​ ​(​J​S​O​N​,​ ​X​M​L​,​ ​e​t​c​.​)
		 */
		bodyPlaceholder: string;
		/**
		 * U​s​e​ ​e​d​i​t​o​r​ ​c​o​n​t​e​n​t​ ​a​s​ ​r​e​q​u​e​s​t​ ​b​o​d​y
		 */
		useEditorContent: string;
		/**
		 * S​e​n​d​ ​a​s​ ​r​a​w​ ​t​e​x​t​ ​(​d​o​n​'​t​ ​p​a​r​s​e​ ​a​s​ ​J​S​O​N​)
		 */
		sendAsRawText: string;
		/**
		 * C​l​e​a​r​ ​A​l​l
		 */
		clearAll: string;
		/**
		 * A​r​e​ ​y​o​u​ ​s​u​r​e​ ​y​o​u​ ​w​a​n​t​ ​t​o​ ​c​l​e​a​r​ ​a​l​l​ ​s​e​t​t​i​n​g​s​?​ ​T​h​i​s​ ​w​i​l​l​ ​r​e​m​o​v​e​ ​a​l​l​ ​s​a​v​e​d​ ​h​e​a​d​e​r​s​,​ ​b​o​d​y​,​ ​a​n​d​ ​U​R​L​ ​f​r​o​m​ ​s​t​o​r​a​g​e​.
		 */
		clearAllConfirm: string;
		/**
		 * C​a​n​c​e​l
		 */
		cancel: string;
		/**
		 * S​a​v​e
		 */
		save: string;
	};
	graph: {
		/**
		 * S​h​o​w​ ​{​c​o​u​n​t​}​ ​m​o​r​e
		 * @param {unknown} count
		 */
		showMore: RequiredParams<'count'>;
		/**
		 * S​h​o​w​ ​l​e​s​s
		 */
		showLess: string;
		/**
		 * E​x​p​a​n​d
		 */
		expand: string;
		/**
		 * C​o​l​l​a​p​s​e
		 */
		collapse: string;
		/**
		 * E​x​p​a​n​d​ ​a​l​l
		 */
		expandAll: string;
	};
	languages: {
		/**
		 * E​n​g​l​i​s​h
		 */
		en: string;
		/**
		 * 한​국​어
		 */
		ko: string;
		/**
		 * 日​本​語
		 */
		ja: string;
	};
	footer: {
		/**
		 * R​e​a​d​y
		 */
		ready: string;
	};
};

export type TranslationFunctions = {
	header: {
		/**
		 * JSON Editor
		 */
		title: () => LocalizedString;
		/**
		 * Clear
		 */
		clear: () => LocalizedString;
		/**
		 * Copy
		 */
		copy: () => LocalizedString;
		/**
		 * Copied to clipboard
		 */
		copySuccess: () => LocalizedString;
		/**
		 * Failed to copy to clipboard
		 */
		copyError: () => LocalizedString;
		/**
		 * Format
		 */
		format: () => LocalizedString;
		/**
		 * Minify
		 */
		minify: () => LocalizedString;
		/**
		 * Sample Data
		 */
		sample: () => LocalizedString;
		/**
		 * Language
		 */
		language: () => LocalizedString;
	};
	editor: {
		/**
		 * Enter your JSON data here...
		 */
		placeholder: () => LocalizedString;
		/**
		 * Invalid JSON
		 */
		invalidJson: () => LocalizedString;
		/**
		 * Valid JSON
		 */
		validJson: () => LocalizedString;
		/**
		 * Enter URL to fetch JSON...
		 */
		urlPlaceholder: () => LocalizedString;
		/**
		 * URL is required
		 */
		urlRequired: () => LocalizedString;
		/**
		 * Failed to fetch data
		 */
		fetchError: () => LocalizedString;
		/**
		 * Go
		 */
		go: () => LocalizedString;
		/**
		 * Request Settings
		 */
		requestSettings: () => LocalizedString;
		/**
		 * Configure HTTP headers and request body
		 */
		requestSettingsDescription: () => LocalizedString;
		/**
		 * Headers
		 */
		headers: () => LocalizedString;
		/**
		 * Header key
		 */
		headerKey: () => LocalizedString;
		/**
		 * Header value
		 */
		headerValue: () => LocalizedString;
		/**
		 * Add Header
		 */
		addHeader: () => LocalizedString;
		/**
		 * Body
		 */
		body: () => LocalizedString;
		/**
		 * Configure the request body for POST/PUT/PATCH requests.
		 */
		bodyDescription: () => LocalizedString;
		/**
		 * Enter request body (JSON, XML, etc.)
		 */
		bodyPlaceholder: () => LocalizedString;
		/**
		 * Use editor content as request body
		 */
		useEditorContent: () => LocalizedString;
		/**
		 * Send as raw text (don't parse as JSON)
		 */
		sendAsRawText: () => LocalizedString;
		/**
		 * Clear All
		 */
		clearAll: () => LocalizedString;
		/**
		 * Are you sure you want to clear all settings? This will remove all saved headers, body, and URL from storage.
		 */
		clearAllConfirm: () => LocalizedString;
		/**
		 * Cancel
		 */
		cancel: () => LocalizedString;
		/**
		 * Save
		 */
		save: () => LocalizedString;
	};
	graph: {
		/**
		 * Show {count} more
		 */
		showMore: (arg: { count: unknown }) => LocalizedString;
		/**
		 * Show less
		 */
		showLess: () => LocalizedString;
		/**
		 * Expand
		 */
		expand: () => LocalizedString;
		/**
		 * Collapse
		 */
		collapse: () => LocalizedString;
		/**
		 * Expand all
		 */
		expandAll: () => LocalizedString;
	};
	languages: {
		/**
		 * English
		 */
		en: () => LocalizedString;
		/**
		 * 한국어
		 */
		ko: () => LocalizedString;
		/**
		 * 日本語
		 */
		ja: () => LocalizedString;
	};
	footer: {
		/**
		 * Ready
		 */
		ready: () => LocalizedString;
	};
};

export type Formatters = {};
